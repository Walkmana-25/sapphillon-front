// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file sapphillon/ai/v1/search_model_service.proto (package sapphillon.ai.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Status } from "../../../google/rpc/status_pb";
import { file_google_rpc_status } from "../../../google/rpc/status_pb";
import type { Models } from "./model_pb";
import { file_sapphillon_ai_v1_model } from "./model_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sapphillon/ai/v1/search_model_service.proto.
 */
export const file_sapphillon_ai_v1_search_model_service: GenFile = /*@__PURE__*/
  fileDesc("CitzYXBwaGlsbG9uL2FpL3YxL3NlYXJjaF9tb2RlbF9zZXJ2aWNlLnByb3RvEhBzYXBwaGlsbG9uLmFpLnYxIqkBChJTZWFyY2hNb2RlbFJlcXVlc3QSIAoTcHJvdmlkZXJfbmFtZV9xdWVyeRgBIAEoCUgAiAEBEh0KEG1vZGVsX25hbWVfcXVlcnkYAiABKAlIAYgBARIRCglwYWdlX3NpemUYAyABKAUSEgoKcGFnZV90b2tlbhgEIAEoCUIWChRfcHJvdmlkZXJfbmFtZV9xdWVyeUITChFfbW9kZWxfbmFtZV9xdWVyeSJ8ChNTZWFyY2hNb2RlbFJlc3BvbnNlEigKBm1vZGVscxgBIAMoCzIYLnNhcHBoaWxsb24uYWkudjEuTW9kZWxzEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCRIiCgZzdGF0dXMYAyABKAsyEi5nb29nbGUucnBjLlN0YXR1czJwChJTZWFyY2hNb2RlbFNlcnZpY2USWgoLU2VhcmNoTW9kZWwSJC5zYXBwaGlsbG9uLmFpLnYxLlNlYXJjaE1vZGVsUmVxdWVzdBolLnNhcHBoaWxsb24uYWkudjEuU2VhcmNoTW9kZWxSZXNwb25zZWIGcHJvdG8z", [file_google_rpc_status, file_sapphillon_ai_v1_model]);

/**
 * @generated from message sapphillon.ai.v1.SearchModelRequest
 */
export type SearchModelRequest = Message<"sapphillon.ai.v1.SearchModelRequest"> & {
  /**
   * The query string to search for models.
   *
   * @generated from field: optional string provider_name_query = 1;
   */
  providerNameQuery?: string;

  /**
   * @generated from field: optional string model_name_query = 2;
   */
  modelNameQuery?: string;

  /**
   * The maximum number of results to return.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The page token for pagination.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message sapphillon.ai.v1.SearchModelRequest.
 * Use `create(SearchModelRequestSchema)` to create a new message.
 */
export const SearchModelRequestSchema: GenMessage<SearchModelRequest> = /*@__PURE__*/
  messageDesc(file_sapphillon_ai_v1_search_model_service, 0);

/**
 * @generated from message sapphillon.ai.v1.SearchModelResponse
 */
export type SearchModelResponse = Message<"sapphillon.ai.v1.SearchModelResponse"> & {
  /**
   * The list of models matching the search criteria.
   *
   * @generated from field: repeated sapphillon.ai.v1.Models models = 1;
   */
  models: Models[];

  /**
   * The token to retrieve the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: google.rpc.Status status = 3;
   */
  status?: Status;
};

/**
 * Describes the message sapphillon.ai.v1.SearchModelResponse.
 * Use `create(SearchModelResponseSchema)` to create a new message.
 */
export const SearchModelResponseSchema: GenMessage<SearchModelResponse> = /*@__PURE__*/
  messageDesc(file_sapphillon_ai_v1_search_model_service, 1);

/**
 * @generated from service sapphillon.ai.v1.SearchModelService
 */
export const SearchModelService: GenService<{
  /**
   * Searches for models based on the provided query.
   * Returns a list of models that match the search criteria.
   *
   * @generated from rpc sapphillon.ai.v1.SearchModelService.SearchModel
   */
  searchModel: {
    methodKind: "unary";
    input: typeof SearchModelRequestSchema;
    output: typeof SearchModelResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sapphillon_ai_v1_search_model_service, 0);

